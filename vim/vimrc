" Good .vimrc files
" http://people.mandriva.com/~rgarciasuarez/dotfiles/vimrc
set nocompatible

filetype on
filetype plugin on
filetype indent on
syntax on
" FINALLY! Don't need to reload to detect syntax of a file with a valid
" extension
runtime! ftdetect/*.vim

" Wow, this cleaned up my ~/.vim like you would not believe.
" http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen
call pathogen#runtime_append_all_bundles()
call pathogen#helptags() " Generate help tags for every bundle

set laststatus=2 " always display status line
" http://vim.runpaint.org/display/changing-status-line/
" Status line detail:
" %F = file name ("~/.vimrc")
" %t = file BASENAME (".vimrc")
" %m = display "[+]" if file has been modified
" %r = display "[RO]" if file is read-only
" %y = file content type, e.g. "[ruby]"
" %{&ff} = file format (unix/dos)
" strftime.... = time
"   (See: http://vim.wikia.com/wiki/Insert_current_date_or_time)
" getftime = last modification time
" %= = right-align everything after this
" %l = current line number
" %L = total lines
" %c = current column
" %P = ??? something with percentage ???
let part1="%{fugitive#statusline()}%t%h%m%r%h%w"
" time is like "07/29/10 07:36:44"
let time=" %{strftime(\"%m/%d/%y %T\",getftime(expand(\"%:p\")))}"
let part3="%= lin:%l/%L col:%c"
" Using "let &stl" instead of "set statusline" lets us use a string.
let &stl=part1.time.part3

"colorscheme railscasts
set gfn=Bitsteam\ Vera\ Sans\ Mono\ 12 " Use the Bitstream font

set number " line numbers
set numberwidth=3 " minimum
set ruler  " show cursor position all the time
set nowrap " don't wrap lines
set backspace=indent,eol,start " allow backspacing over everything in insert mode
set autoindent
set copyindent " copy previous indentation on autoindenting
set showmatch " show matching parenthesis
set ignorecase " ignore case when searching
set smartcase " ignore case if search pattern is all lowercase, case-sensitive otherwise
set smarttab " insert tabs on the start of a line according to shiftwidth, not tabstop
set incsearch " show search matches as you type
set showcmd " display incomplete commands
set modelines=2 " inspect top/bottom 2 lines for modeline
set scrolloff=3 " When scrolling, show 3 lines of context

set fileencodings=utf-8,iso-8859-1
set ff=unix
set textwidth=76 " Numbers on the side take off 4 columns, 80-4 = 76
set showbreak="@" " This is prepended to wrapped lines
" tabs are trail, end of lines are $
set listchars=tab:>-,eol:$

" Use apostrophe for backquote function, since backquote is so much more
" useful than apostrophe
nnoremap ` '

" **** TABS ****
" Note that ~/.vim/after/ftplugin changes some of these settings
" http://vim.wikia.com/wiki/Indenting_source_code#Setup
" No tabs: set expandtab, set shiftwidth=softtabstop, don't change tabstop
" Pure tabs: set noexpandtab, set tabstop=shiftwidth, don't touch softtabstop
" Tabs+spaces: set noexpandtab, set softtabstop=shiftwidth, don't touch tabstop
"
" http://vim.wikia.com/wiki/Indenting_source_code#Explanation_of_the_options
" tabstop = how many columns a TAB counts for
" shiftwidth = what happens when you press <</>>/==
" softtabstop = number of spaces inserted when TAB is pressed
" expandtab = if expandtab is set, then <TAB> inserts softtabstop amount of
" space characters. Otherwise, the amount of spaces inserted is minimized by
" using TAB characters
" Currently ruby style (tabs = 2 spaces)
set expandtab
" set tabstop=4
set softtabstop=2
set shiftwidth=2

" With backup and writebackup on, it overwrites the old backup
set backup
set writebackup
set backupdir=~/.vim/backups
" setting backupskip to this to allow for 'crontab -e' using vim.
" thanks to: http://tim.theenchanter.com/2008/07/crontab-temp-file-must-be-edited-in.html
set backupskip=/tmp/*,/private/tmp/*"

" views options
set viewdir=~/.vim/views
" http://github.com/tpope/vim-rails/issues/closed/#issue/25
" Having these mkview lines make rails.vim not work (lots of "File not in
" path" errors.
" Match all files but don't trigger when opening vim without a file
"autocmd BufWinLeave ?* mkview
"autocmd BufWinEnter ?* silent loadview

" map autocomplete to Tab
imap <Tab> <C-N>

" "," is the <Leader> character
let mapleader=","

" Rails.vim
" Leader shortcuts for Rails commands
" from http://github.com/ryanb/dotfiles/blob/master/vimrc
map <Leader>m :Rmodel
map <Leader>c :Rcontroller
map <Leader>v :Rview
map <Leader>u :Runittest
map <Leader>f :Rfunctionaltest
map <Leader>tm :RTmodel
map <Leader>tc :RTcontroller
map <Leader>tv :RTview
map <Leader>tu :RTunittest
map <Leader>tf :RTfunctionaltest
map <Leader>sm :RSmodel
map <Leader>sc :RScontroller
map <Leader>sv :RSview
map <Leader>su :RSunittest
map <Leader>sf :RSfunctionaltest
command! Rroutes :e config/routes.rb

" Move lines up and down
"map <C-J> :m +1 <CR>
"map <C-K> :m -2 <CR>
" Window navigation
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>

" Mappings
map :Nohl :nohlsearch
" no ex mode
map Q q

inoremap kj <Esc>
inoremap <Caps> <Esc>
" Try to retrain my muscle memory and stay on the home row
inoremap <Esc> <NOP>

" When you call Rpreview <x>, use this command to open localhost:3000/<x>
:command -bar -nargs=1 OpenURL :!open <args>

" on opening the file, clear search-highlighting
autocmd BufReadCmd :set nohlsearch
autocmd BufWritePre * :%s/\s\+$//e " Remove trailing whitespace before saving

autocmd BufRead ~/.dotfiles/extra/* set syntax=zsh

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event
" handler (happens when dropping a file on gvim).
" via: http://github.com/jferris/config_files/blob/master/vimrc
autocmd BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$") |
      \   exe "normal g`\"" |
      \ endif
